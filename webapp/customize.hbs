<html>

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Sketchfab Viewer API example</title>
	<!-- Insert this script -->
	<script type="text/javascript" src="https://static.sketchfab.com/api/sketchfab-viewer-1.3.1.js"></script>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" crossorigin="anonymous">
	<script src="https://code.jquery.com/jquery-3.3.1.min.js" crossorigin="anonymous"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" crossorigin="anonymous"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" crossorigin="anonymous"></script>
</head>

<body>


	<!-- Main navigation -->
	<header>
		<!--Navbar-->
		<nav class="navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar">
			<div class="container">
				<a class="navbar-brand" href="#">
					<strong>SDM</strong>
				</a>
				<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent-7"
				 aria-controls="navbarSupportedContent-7" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="collapse navbar-collapse" id="navbarSupportedContent-7">
					<ul class="navbar-nav mr-auto">
						<li class="nav-item active">
							<a class="nav-link" href="\">Add Defect
								<span class="sr-only">(current)</span>
							</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="\getAnnotationList">Defects</a>
						</li>

					</ul>

				</div>
			</div>
		</nav>
		<!-- Navbar -->
		<!-- Full Page Intro -->
		<div class="view" style="background-image: url('https://mdbootstrap.com/img/Photos/Others/images/31.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;">
			<!-- Mask & flexbox options-->
			<div class="mask rgba-indigo-strong d-flex justify-content-center align-items-center">
				<!-- Content -->
				<div class="container">
					<!--Grid row-->
					<div class="row pt-lg-5 mt-lg-5">
						<!--Grid column-->
						<div class="col-md-6 mb-5 mt-md-0 mt-5 white-text text-center text-md-left wow fadeInLeft" data-wow-delay="0.3s">
							<h1 class="display-4 font-weight-bold">A-321</h1>
							<hr class="hr-light">
							<h6 class="mb-3">
								<iframe src="" id="api-frame" height="500" width="500"></iframe>
							</h6>

						</div>
						<!--Grid column-->
						<!--Grid column-->
						<div class="col-md-6 col-xl-5 mb-4">
							<!--Form-->
							<div class="card wow fadeInRight" data-wow-delay="0.3s">
								<div class="card-body z-depth-2">
									<!--Header-->
									<div class="text-center">
										<h3 class="dark-grey-text">
											<strong>Create Defect</strong>
										</h3>
										<hr>
									</div>
									<!--Body-->
									<div class="md-form">
										<div class="col">
											Positionx: <input id="positionX" value="0">
										</div>
										<div class="col">
											Positiony: <input id="positionY" value="0">
										</div>
										<div class="col">
											Positionz: <input id="positionZ" value="0">
										</div>

										<div class="col">
											Normalx: <input id="normalX" value="0">
										</div>
										<div class="col">
											Normaly: <input id="normalY" value="0">
										</div>
										<div class="col">
											Normalz: <input id="normalZ" value="0">
										</div>
										<div class="col">
											Camerax: <input id="cameraX" value="0">
										</div>
										<div class="col">
											Cameray: <input id="cameraY" value="0">
										</div>
										<div class="col">
											Cameraz: <input id="cameraZ" value="0">
										</div>

										<div class="col">
											Targetx: <input id="targetX" value="0">
										</div>
										<div class="col">
											Targety: <input id="targetY" value="0">
										</div>
										<div class="col">
											Targetz: <input id="targetZ" value="0">
										</div>
									</div>
									<div class="md-form">
										<i class="fa fa-user prefix grey-text"></i>
										<input type="text" id="annoName" class="form-control">
										<label for="annoName">Title</label>
									</div>
									<div class="md-form">
										<i class="fa fa-envelope prefix grey-text"></i>
										<input type="text" id="annoDescr" class="form-control">
										<label for="annoDescr">Description</label>
									</div>
									<!--Textarea with icon prefix-->

									<div class="text-center mt-3">
										<button class="btn btn-indigo" id="createAnno" disabled=true>Save</button>
										<button class="btn btn-indigo" id="markAnno">Mark</button>
										<hr>
										<small id="annoRes" class="form-text text-muted" style="display: none; color: green">Saved Successfully</small>
									</div>
								</div>
							</div>
							<!--/.Form-->
						</div>
						<!--Grid column-->
					</div>
					<!--Grid row-->
				</div>
				<!-- Content -->
			</div>
			<!-- Mask & flexbox options-->
		</div>
		<!-- Full Page Intro -->
	</header>
	<!-- Main navigation -->


	<!-- Initialize the viewer -->
	<script type="text/javascript">
		var annolist = [];
		var addDefectMode = false;
		currentAnnotationToCreate = {};
		markDefectMode = false;
		cameraX = 0;
		cameraY = 0;
		cameraZ = 0;
		targetX = 0;
		targetY = 0;
		targetZ = 0;



		var iframe = document.getElementById('api-frame');
		var urlid = 'dbf6450b82a4461c9393dda70fb66a43';

		// By default, the latest version of the viewer API will be used.
		var client = new Sketchfab(iframe);

		// Alternatively, you can request a specific version.
		// var client = new Sketchfab( '1.3.0', iframe );

		function onSuccess(api) {
			document.getElementById('markAnno').addEventListener('click', function () {
				markDefectMode = true;
			});
			api.addEventListener('click', function (info) {
				if (info.position3D !== null && markDefectMode) {
					markDefectMode = false;
					$('#positionX').val(info.position3D[0]);
					$('#positionY').val(info.position3D[1]);
					$('#positionZ').val(info.position3D[2]);
					$('#normalX').val(info.normal[0]);
					$('#normalY').val(info.normal[1]);
					$('#normalZ').val(info.normal[2]);

					api.getCameraLookAt(function (err, camera) {
						cameraX = camera.position[0];
						cameraY = camera.position[1];
						cameraZ = camera.position[2];
						targetX = camera.position[0];
						targetY = camera.position[1];
						targetZ = camera.position[2];
						$('#cameraX').val(camera.position[0]);
						$('#cameraY').val(camera.position[1]);
						$('#cameraZ').val(camera.position[2]);
						$('#targetX').val(camera.target[0]);
						$('#targetY').val(camera.target[1]);
						$('#targetZ').val(camera.target[2]);
						document.getElementById('createAnno').disabled = false;
						document.getElementById('annoRes').style.display = "hidden";

					});
					currentAnnotationToCreate = {
						pox: $('#positionX').val(),
						poy: $('#positionY').val(),
						poz: $('#positionZ').val(),
						nox: $('#normalX').val(),
						noy: $('#normalX').val(),
						noz: $('#normalX').val(),
						camPos: [cameraX, cameraY, cameraZ],
						camTarget: [targetX, targetY, targetZ],
						title: 'Title',
						descr: 'Description',
					};
					api.createAnnotation(
						[currentAnnotationToCreate.pox, currentAnnotationToCreate.poy, currentAnnotationToCreate.poz],
						[currentAnnotationToCreate.nox, currentAnnotationToCreate.noy, currentAnnotationToCreate.noz],
						currentAnnotationToCreate.camPos,
						currentAnnotationToCreate.camTarget,
						currentAnnotationToCreate.title,
						currentAnnotationToCreate.descr,
						function (index) {
							console.log('added hotspot: ' + index);
							api.removeAnnotation(index);
						}
					);
				}
			}, {
				pick: 'fast'
			});



			api.start(function () {

				$('#loadAnno').click(function () {
					init();
				});
				console.log('started');

				document.getElementById('createAnno').addEventListener('click', function () {
					{
						// var annoposObj = {
						// 	pox: $('#positionX').val(),
						// 	poy: $('#positionY').val(),
						// 	poz: $('#positionZ').val(),
						// 	nox: $('#normalX').val(),
						// 	noy: $('#normalX').val(),
						// 	noz: $('#normalX').val(),
						// 	camPos: [$('#cameraX').val(), $('#cameraY').val(), $('#cameraZ').val()],
						// 	camTarget: [$('#targetX').val(), $('#targetY').val(), $('#targetZ').val()],
						// 	title: $('#annoName').val(),
						// 	descr: $('#annoDescr').val(),
						// };
					}

					$.ajax({
						type: 'POST',
						url: '/saveAnnotation',
						data: currentAnnotationToCreate,
						success: function (obj) {
							document.getElementById('createAnno').disabled = true;
							document.getElementById('annoRes').style.display = "block";
							// api.createAnnotation(
							// 	[obj.pox, obj.poy, obj.poz],
							// 	[obj.nox, obj.noy, obj.noz],
							// 	obj.camPos,
							// 	obj.camTarget,
							// 	obj.title,
							// 	obj.descr,
							// 	function (index) {
							// 		console.log('added hotspot: ' + index);
							// 		api.removeAnnotation(index);

							// 	}
							// );
							// 
						}
					});
				});

				api.addEventListener('viewerready', function () {
					annolist.forEach(function (obj) {
						console.log('inside create', obj)
						api.createAnnotation(
							[obj.pox, obj.poy, obj.poz],
							[obj.nox, obj.noy, obj.noz],
							obj.camPos,
							obj.camTarget,
							obj.title,
							obj.descr,
							function (index) {
								console.log('added hotspot: ' + index);
								api.removeAnnotation(index);
							}
						);
					});
				});
			});
		}

		function onError(error) {
			console.log(error);
		}

		function init() {
			var jqxhr = jQuery.get("/getAnnotations", function (data) {
					console.log('success');
				})
				.done(function (dataDone) {
					console.log('dataDone ', dataDone);
					annolist = dataDone;
					client.init(urlid, {
						success: onSuccess,
						error: onError,
						annotation: 0,
						annotations_visible: 1,
						ui_controls: 0

					});
				})
				.fail(function () {
					console.log("error");
				})
				.always(function () {
					console.log("finished");
				});
		}
		init();
	</script>

</body>

</html>